{"version":3,"sources":["lib.js","index.js"],"names":["QRCodeScanner","videoPreview","onError","onCapture","scanner","Instascan","Scanner","video","continuous","mirror","addListener","content","console","info","log","Camera","getCameras","then","cameras","length","start","error","Error","catch","e","stop","document","querySelector","buttonScan","textResult","textError","innerText","JSON","stringify","data","scanning","onclick"],"mappings":";AAqDeA,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAnDTA,IAAAA,EAmDSA,WAjDCC,SAAAA,EAAAA,EAAcC,EAASC,GAAW,IAAA,EAAA,KAAA,EAAA,KAAA,GAErCF,KAAAA,aAAeA,EACfC,KAAAA,QAAUA,EACVC,KAAAA,UAAYA,EAEZC,KAAAA,QAAU,IAAIC,UAAUC,QAAQ,CACjCC,MAAO,KAAKN,aACZO,YAAY,EACZC,QAAQ,IAGPL,KAAAA,QAAQM,YAAY,OAAQ,SAAAC,GAC7BC,QAAQC,KAAK,SAAUF,GACvB,EAAKR,UAAUQ,KAmCZX,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QA9BH,MAAA,WAAA,IAAA,EAAA,KAEJY,QAAQE,IAAI,gBAAiB,KAAKV,SAElCC,UAAUU,OAAOC,aACZC,KAAK,SAAAC,GACEA,EAAQC,OAAS,EACjB,EAAKf,QAAQgB,MAAMF,EAAQ,KAG3BN,QAAQS,MAAM,qBACd,EAAKnB,QAAQ,IAAIoB,MAAM,yBAG9BC,MAAM,SAAAC,GACHZ,QAAQS,MAAMG,GACd,EAAKtB,QAAQsB,OAcdxB,CAAAA,IAAAA,OATJ,MAAA,WAEHY,QAAQE,IAAI,eAAgB,KAAKV,SAC5BA,KAAAA,QAAQqB,WAMNzB,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACnCf,aAlBA,IAAA,EAAA,EAAA,QAAA,aAkBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhBA,IAAMO,EAAQmB,SAASC,cAAc,YAC/BC,EAAaF,SAASC,cAAc,gBACpCE,EAAaH,SAASC,cAAc,gBACpCG,EAAYJ,SAASC,cAAc,eAEnCzB,EAAU,SAAAsB,GACZM,EAAUC,UAAYC,KAAKC,UAAUT,EAAG,KAAM,IAG5CrB,EAAY,SAAA+B,GACdL,EAAWE,UAAYC,KAAKC,UAAUC,EAAM,KAAM,IAGlDC,GAAW,EACT/B,EAAU,IAAIJ,EAAJ,QAAkBO,EAAOL,EAASC,GAElDyB,EAAWQ,QAAU,YACjBD,GAAYA,IAER/B,EAAQgB,QACRQ,EAAWG,UAAY,iBAGvB3B,EAAQqB,OACRG,EAAWG,UAAY","file":"index.map","sourceRoot":"../src","sourcesContent":["\n// https://github.com/schmich/instascan\nclass QRCodeScanner {\n    \n    constructor(videoPreview, onError, onCapture) {\n        \n        this.videoPreview = videoPreview\n        this.onError = onError\n        this.onCapture = onCapture\n        \n        this.scanner = new Instascan.Scanner({\n            video: this.videoPreview,\n            continuous: true,\n            mirror: true\n        })\n        \n        this.scanner.addListener('scan', content => {\n            console.info('RESULT', content)\n            this.onCapture(content)\n        })\n        \n    }\n    \n    start() {\n        \n        console.log('Scanner START', this.scanner)\n        \n        Instascan.Camera.getCameras()\n            .then(cameras => {\n                if (cameras.length > 0) {\n                    this.scanner.start(cameras[0])\n                }\n                else {\n                    console.error('No cameras found.')\n                    this.onError(new Error('No cameras found.'))\n                }\n            })\n            .catch(e => {\n                console.error(e)\n                this.onError(e)\n            })\n        \n    }\n    \n    stop() {\n        \n        console.log('Scanner STOP', this.scanner)\n        this.scanner.stop()\n        \n    }\n    \n}\n\nexport default QRCodeScanner\n","import QRCodeScanner from './lib.js'\n    \nconst video = document.querySelector('#preview')\nconst buttonScan = document.querySelector('#button-scan')\nconst textResult = document.querySelector('#text-result')\nconst textError = document.querySelector('#text-error')\n\nconst onError = e => {\n    textError.innerText = JSON.stringify(e, null, 4)\n}\n\nconst onCapture = data => {\n    textResult.innerText = JSON.stringify(data, null, 4)\n}\n\nlet scanning = false\nconst scanner = new QRCodeScanner(video, onError, onCapture)\n\nbuttonScan.onclick = () => {\n    scanning = !scanning\n    if (scanning) {\n        scanner.start()\n        buttonScan.innerText = 'Stop Scanner'\n    }\n    else {\n        scanner.stop()\n        buttonScan.innerText = 'Scan QR Code'\n    }\n}\n"]}